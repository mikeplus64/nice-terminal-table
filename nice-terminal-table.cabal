cabal-version:      2.4
name:               nice-terminal-table
version:            0.1.0.0
license:            MIT
copyright:          2023 Michael Ledger
maintainer:         mike@quasimal.com
author:             Michael Ledger
category:           Web
extra-source-files:
  LICENSE
  README.md

common shared
  ghc-options:
    -Wall -Wincomplete-record-updates -Wincomplete-uni-patterns
    -Wmissing-deriving-strategies -Wunused-foralls -Wunused-foralls
    -Wno-name-shadowing -fprint-explicit-foralls -fprint-explicit-kinds

  mixins:
    base hiding (Prelude),
    base (Prelude as BasePrelude)

  default-extensions:
    NoStarIsType
    AllowAmbiguousTypes
    BangPatterns
    BlockArguments
    ConstraintKinds
    DataKinds
    DeriveAnyClass
    DeriveDataTypeable
    DeriveFoldable
    DeriveFunctor
    DeriveGeneric
    DeriveLift
    DeriveTraversable
    DerivingStrategies
    DerivingVia
    DuplicateRecordFields
    EmptyCase
    EmptyDataDecls
    EmptyDataDeriving
    ExistentialQuantification
    ExplicitForAll
    FlexibleContexts
    FlexibleInstances
    FunctionalDependencies
    GADTSyntax
    GeneralisedNewtypeDeriving
    ImportQualifiedPost
    InstanceSigs
    KindSignatures
    LambdaCase
    MultiParamTypeClasses
    MultiWayIf
    NamedFieldPuns
    NumericUnderscores
    OverloadedLabels
    OverloadedStrings
    PackageImports
    PartialTypeSignatures
    PatternSynonyms
    PolyKinds
    PostfixOperators
    QuasiQuotes
    RankNTypes
    ScopedTypeVariables
    StandaloneDeriving
    StandaloneKindSignatures
    StrictData
    TemplateHaskell
    TupleSections
    TypeApplications
    TypeFamilies
    TypeFamilyDependencies
    TypeOperators
    UndecidableInstances
    ViewPatterns

  build-depends:
    , array
    , base
    , containers
    , lens
    , linear
    , relude
    , template-haskell
    , text
    , transformers
    , vector

  default-language:   Haskell2010

library
  import:          shared
  hs-source-dirs:  lib
  exposed-modules: Nice.Terminal.Box
  other-modules:   Prelude
